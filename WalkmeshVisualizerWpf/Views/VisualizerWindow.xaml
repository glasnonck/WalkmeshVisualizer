<Window
    x:Class="WalkmeshVisualizerWpf.Views.VisualizerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:WalkmeshVisualizerWpf.Views"
    xmlns:help="clr-namespace:WalkmeshVisualizerWpf.Helpers"
    xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
    mc:Ignorable="d"
    Title="{Binding WindowTitle, Mode=OneTime}"
    MinHeight="600" Height="800"
    MinWidth="800" Width="1200"
    Loaded="MainWindow_Loaded"
    Icon="../Resources/Icon.png"
    d:DataContext="{d:DesignInstance views:VisualizerWindow, IsDesignTimeCreatable=False}"
    x:Name="thisWindow"
    >
    <Window.Resources>

        <!-- UI commands. -->
        <RoutedUICommand x:Key="Commands.ZoomOut" />
        <RoutedUICommand x:Key="Commands.ZoomIn" />
        <RoutedUICommand x:Key="Commands.JumpBackToPrevZoom" />
        <RoutedUICommand x:Key="Commands.Fill" />
        <RoutedUICommand x:Key="Commands.OneHundredPercent" />
        <RoutedUICommand x:Key="Commands.FifteenHundredPercent" />
        <RoutedUICommand x:Key="Commands.FindMatchingCoords" />
        
        <RoutedUICommand x:Key="Commands.LoadK1" />
        <RoutedUICommand x:Key="Commands.LoadK2" />
        <RoutedUICommand x:Key="Commands.LoadCustom" />
        <RoutedUICommand x:Key="Commands.RemoveAll" />
        <RoutedUICommand x:Key="Commands.SwapGame" />
        <RoutedUICommand x:Key="Commands.ClearCache" />

        <!-- 
        This converts from a scale value to a percentage value.
        It is used to convert the value of 'ContentScale' to the percentage zoom level that is
        displayed in the UI.
        -->
        <help:ScaleToPercentConverter x:Key="scaleToPercentConverter" />
        <help:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <help:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
        <help:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <help:AndBoolToVisibilityMultiConverter x:Key="AndBoolToVisibilityMultiConverter" />
        <help:OrInverseBoolToVisibilityMultiConverter x:Key="OrInverseBoolToVisibilityMultiConverter" />

    </Window.Resources>

    <Window.InputBindings>

        <!--
        Bind keys to commands.
        -->
        <KeyBinding
            Key="Minus"
            Command="{StaticResource Commands.ZoomOut}"
            />
        <KeyBinding
            Key="Plus"
            Command="{StaticResource Commands.ZoomIn}"
            />
        <KeyBinding
            Key="Backspace"
            Command="{StaticResource Commands.JumpBackToPrevZoom}"
            />

    </Window.InputBindings>

    <Window.CommandBindings>

        <!--
        Bind commands to event handlers.
        -->
        <CommandBinding 
            Command="{StaticResource Commands.ZoomOut}" 
            Executed="ZoomOut_Executed" 
            />
        <CommandBinding 
            Command="{StaticResource Commands.ZoomIn}" 
            Executed="ZoomIn_Executed" 
            />
        <CommandBinding 
            Command="{StaticResource Commands.JumpBackToPrevZoom}" 
            Executed="JumpBackToPrevZoom_Executed" 
            CanExecute="JumpBackToPrevZoom_CanExecuted"
            />
        <CommandBinding 
            Command="{StaticResource Commands.Fill}" 
            Executed="Fill_Executed" 
            />
        <CommandBinding 
            Command="{StaticResource Commands.OneHundredPercent}" 
            Executed="OneHundredPercent_Executed" 
            />
        <CommandBinding
            Command="{StaticResource Commands.LoadK1}"
            Executed="LoadK1_Executed"
            CanExecute="LoadK1_CanExecute"
            />
        <CommandBinding
            Command="{StaticResource Commands.LoadK2}"
            Executed="LoadK2_Executed"
            CanExecute="LoadK2_CanExecute"
            />
        <CommandBinding
            Command="{StaticResource Commands.LoadCustom}"
            Executed="LoadCustom_Executed"
            CanExecute="LoadCustom_CanExecute"
            />
        <CommandBinding
            Command="{StaticResource Commands.RemoveAll}"
            Executed="RemoveAll_Executed"
            CanExecute="RemoveAll_CanExecute"
            />
        <CommandBinding
            Command="{StaticResource Commands.SwapGame}"
            Executed="SwapGame_Executed"
            CanExecute="SwapGame_CanExecute"
            />
        <CommandBinding
            Command="{StaticResource Commands.ClearCache}"
            Executed="ClearCache_Executed"
            CanExecute="ClearCache_CanExecute"
            />
        <CommandBinding
            Command="{StaticResource Commands.FindMatchingCoords}"
            Executed="FindMatchingCoords_Executed"
            CanExecute="FindMatchingCoords_CanExecute"
            />
        <CommandBinding
            Command="{StaticResource Commands.FifteenHundredPercent}"
            Executed="FifteenHundredPercent_Executed"
            />

    </Window.CommandBindings>

    <DockPanel>
        <Expander
            DockPanel.Dock="Left"
            Grid.Column="0"
            ExpandDirection="Right"
            FontSize="14"
            >
            <Expander.Header>
                <TextBlock Text="Match Coordinates" Margin="0,5">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="-90" />
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>

            <Border 
                BorderBrush="Black"
                BorderThickness="0,0,1,0"
                Padding="0,5"
                >
                <Grid Width="300">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" x:Name="rowLeftMatches" />
                        <RowDefinition Height="*" x:Name="rowRightMatches" />
                        <RowDefinition Height="*" x:Name="rowBothMatches" />
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Expander">
                            <!--<Setter Property="BorderBrush" Value="Black" />-->
                            <Setter Property="Margin" Value="5,5,5,0" />
                            <Setter Property="Padding" Value="1" />
                            <Setter Property="Width" Value="290" />
                        </Style>
                        <Style TargetType="ListView">
                            <Setter Property="Margin" Value="0,5,0,0" />
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
                            <Setter Property="FontSize" Value="12" />
                        </Style>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                        <Style TargetType="Rectangle" x:Key="colorRectangle">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Height" Value="14" />
                            <Setter Property="Width" Value="14" />
                            <Setter Property="Fill" Value="{Binding Rim.MeshColor}" />
                            <Setter Property="Stroke" Value="Black" />
                            <Setter Property="StrokeThickness" Value="0.5" />
                        </Style>
                    </Grid.Resources>

                    <!-- Match coordinates button. -->
                    <Button
                        Grid.Row="0"
                        Content="Match Coords"
                        Margin="5,0"
                        Width="290"
                        Command="{StaticResource Commands.FindMatchingCoords}"
                        />

                    <!-- No point set text. -->
                    <TextBlock
                        Grid.Row="1"
                        Margin="5,5,5,0"
                        Text="Place a point by double clicking to begin matching walkmesh coordinates."
                        TextWrapping="Wrap"
                        Width="290"
                        >
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{StaticResource OrInverseBoolToVisibilityMultiConverter}">
                                <Binding Path="LeftClickPointVisible" />
                                <Binding Path="RightClickPointVisible" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>

                    <!-- Modules matching left click point. -->
                    <Grid x:Name="exLeftClickPoint" Grid.Row="1" Margin="5,5,5,0"
                          Visibility="{Binding LeftClickPointVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                          >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                            
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5,0">
                            <Ellipse Height="8" Width="8" Fill="Black" Stroke="Black" Margin="0,0,5,0" />
                            <TextBlock Text="Black Point" FontWeight="SemiBold" />
                        </StackPanel>
                            
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5,0">
                            <TextBlock Text="(" />
                            <TextBlock Text="{Binding LastLeftClickModuleCoords.X, StringFormat=N2}" />
                            <TextBlock Text=", " />
                            <TextBlock Text="{Binding LastLeftClickModuleCoords.Y, StringFormat=N2}" />
                            <TextBlock Text=")" />
                        </StackPanel>

                        <ListView Grid.Row="1" x:Name="lvLeftPointMatches" ItemsSource="{Binding LeftPointMatches}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="18" Header="">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Margin="-4">
                                                    <Rectangle Style="{StaticResource colorRectangle}" />
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="30" Header="">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Walkability}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="60" DisplayMemberBinding="{Binding Rim.FileName}" Header="Rim" />
                                    <GridViewColumn Width="40" DisplayMemberBinding="{Binding Rim.Planet}" Header="Planet" />
                                    <GridViewColumn Width="110" DisplayMemberBinding="{Binding Rim.CommonName}" Header="Common Name" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>

                    <!-- Modules matching right click point. -->
                    <Grid x:Name="exRightClickPoint" Grid.Row="2" Margin="5,5,5,0"
                          Visibility="{Binding RightClickPointVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                          >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5,0">
                            <Ellipse Height="8" Width="8" Fill="White" Stroke="Black" Margin="0,0,5,0" />
                            <TextBlock Text="White Point" FontWeight="SemiBold" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5,0">
                            <TextBlock Text="(" />
                            <TextBlock Text="{Binding LastRightClickModuleCoords.X, StringFormat=N2}" />
                            <TextBlock Text=", " />
                            <TextBlock Text="{Binding LastRightClickModuleCoords.Y, StringFormat=N2}" />
                            <TextBlock Text=")" />
                        </StackPanel>

                        <ListView Grid.Row="2" x:Name="lvRightPointMatches" ItemsSource="{Binding RightPointMatches}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="18" Header="">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Margin="-4">
                                                    <Rectangle Style="{StaticResource colorRectangle}" />
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="30" Header="">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Walkability}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="60" DisplayMemberBinding="{Binding Rim.FileName}" Header="Rim" />
                                    <GridViewColumn Width="40" DisplayMemberBinding="{Binding Rim.Planet}" Header="Planet" />
                                    <GridViewColumn Width="110" DisplayMemberBinding="{Binding Rim.CommonName}" Header="Common Name" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>

                    <!-- Modules matching both left and right click points. -->
                    <Grid x:Name="exBothPoints" Grid.Row="3" Margin="5,5,5,0">
                        <Grid.Visibility>
                            <MultiBinding Converter="{StaticResource AndBoolToVisibilityMultiConverter}">
                                <Binding Path="LeftClickPointVisible" />
                                <Binding Path="RightClickPointVisible" />
                            </MultiBinding>
                        </Grid.Visibility>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5,0">
                            <Ellipse Height="8" Width="8" Fill="Black" Stroke="Black" Margin="0,0,5,0" />
                            <Ellipse Height="8" Width="8" Fill="White" Stroke="Black" Margin="0,0,5,0" />
                            <TextBlock Text="Both Points" FontWeight="SemiBold" />
                        </StackPanel>

                        <ListView Grid.Row="1" x:Name="lvBothPointMatches" ItemsSource="{Binding BothPointMatches}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="18" Header="">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Margin="-4">
                                                    <Rectangle Style="{StaticResource colorRectangle}" />
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="30" Header="">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Walkability}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="60" DisplayMemberBinding="{Binding Rim.FileName}" Header="Rim" />
                                    <GridViewColumn Width="40" DisplayMemberBinding="{Binding Rim.Planet}" Header="Planet" />
                                    <GridViewColumn Width="110" DisplayMemberBinding="{Binding Rim.CommonName}" Header="Common Name" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </Grid>
            </Border>
        </Expander>

        <!-- 
        Grid placed below the zoom and pan control that contains the zoom slider, zoom label and
        some button.
        -->
        <Grid
            Margin="5"
            DockPanel.Dock="Bottom"
            >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="5,0" />
                        <Setter Property="Width" Value="40" />
                    </Style>
                </StackPanel.Resources>

                <Button x:Name="bFindMatchingCoords" Content="Match Coords" Width="90"
                        Command="{StaticResource Commands.FindMatchingCoords}"
                        Visibility="Collapsed" />

                <ProgressBar
                    x:Name="pbLoading"
                    Width="200"
                    Margin="5,0"
                    Value="{Binding CurrentProgress}"
                    />

                <Border BorderThickness="1" Width="2" BorderBrush="Gray" Margin="5,0" />

                <!-- The 100% button.  Causes the content to be scaled to 100 percent. -->
                <Button Content="300%"
                        Command="{StaticResource Commands.OneHundredPercent}" />

                <Button Content="1500%"
                        Command="{StaticResource Commands.FifteenHundredPercent}" />

                <!-- This is the label that shows what the current zoom level is while zooming in and out. -->
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right"
                           Text="{Binding ElementName=zoomAndPanControl, Path=ContentScale, Converter={StaticResource scaleToPercentConverter}}"
                           />
                <TextBlock VerticalAlignment="Center" Text="%" />

                <!-- Button to zoom out. -->
                <Button Content="-"
                        Width="20"
                        Command="{StaticResource Commands.ZoomOut}" />

                <!-- Slider to change the current zoom level. -->
                <Slider Minimum="10" Maximum="1500"
                        SmallChange="10" LargeChange="20" 
                        TickFrequency="100" TickPlacement="TopLeft"
                        Width="160"
                        Value="{Binding ElementName=zoomAndPanControl, Path=ContentScale,
                                        Converter={StaticResource scaleToPercentConverter}}"
                        />

                <!-- Button to zoom in. -->
                <Button Content="+" Width="20" Margin="5,0,0,0"
                        Command="{StaticResource Commands.ZoomIn}" />

                <!-- Stick a resize grip in the bottom right corner of the window. -->
                <ResizeGrip Margin="5,0,0,0" />

            </StackPanel>
        </Grid>

        <!--<Menu x:Name="Menu" DockPanel.Dock="Top">
            <Menu.Resources>
                <Style TargetType="MenuItem">
                    <Setter Property="FontFamily" Value="Microsoft Sans Serif" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="Padding" Value="6,2" />
                </Style>
            </Menu.Resources>
        </Menu>-->

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />      <!-- Canvas -->
                <ColumnDefinition Width="Auto" />   <!-- GridSplitter -->
                <ColumnDefinition Width="Auto" />   <!-- Options Panel -->
            </Grid.ColumnDefinitions>

            <GridSplitter
                Grid.Column="1"
                Width="3"
                Background="Gray"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Margin="5,0,0,0"
                />

            <Grid
                x:Name="optionsGrid"
                DockPanel.Dock="Right"
                Grid.Column="2"
                Margin="5,0,0,0"
                >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="5*" />
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <Style TargetType="ListViewItem" x:Key="BaseItemStyle">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="Foreground" Value="Black" />
                    </Style>
                    <Style TargetType="ListViewItem" x:Key="OnItemStyle" BasedOn="{StaticResource BaseItemStyle}">
                        <Setter Property="Background" Value="Transparent" />
                        <EventSetter Event="MouseDoubleClick" Handler="LvOn_DoubleClick" />
                    </Style>
                    <Style TargetType="ListViewItem" x:Key="OffItemStyle" BasedOn="{StaticResource BaseItemStyle}">
                        <Setter Property="Background" Value="Transparent" />
                        <EventSetter Event="MouseDoubleClick" Handler="LvOff_DoubleClick" />
                    </Style>
                </Grid.Resources>

                <StackPanel Orientation="Vertical">
                    <Grid Margin="5,5,3,0" x:Name="pnlSelectGame">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Text="Select Game: " FontWeight="Bold"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                        
                        <StackPanel Grid.Column="2" HorizontalAlignment="Center"
                                    Orientation="Horizontal" VerticalAlignment="Center" >
                            <StackPanel.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="2,0" />
                                    <Setter Property="Width" Value="60" />
                                </Style>
                            </StackPanel.Resources>
                            <Button Content="KotOR 1" Command="{StaticResource Commands.LoadK1}" />
                            <Button Content="KotOR 2" Command="{StaticResource Commands.LoadK2}" />
                            <Button Content="Custom" Command="{StaticResource Commands.LoadCustom}" />
                        </StackPanel>
                    </Grid>
                    
                    <Grid Margin="5,5,5,0" x:Name="pnlSelectedGame">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>
                        
                        <TextBlock Text="Selected Game: " />
                        <TextBlock Text="{Binding SelectedGame}" Grid.Column="2" Margin="0,0,10,0" />
                        
                        <Button Content="Swap Game" Grid.Column="3" Width="75"
                                Command="{StaticResource Commands.SwapGame}" />
                    </Grid>

                </StackPanel>

                <Grid x:Name="OnGrid" Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock
                        Text="Active Walkmeshes"
                        Margin="0,5"
                        HorizontalAlignment="Center"
                        TextDecorations="Underline"
                        />
                    <ListView
                        x:Name="lvOn"
                        Grid.Row="1"
                        ItemContainerStyle="{StaticResource OnItemStyle}"
                        ItemsSource="{Binding OnRims}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.CanContentScroll="False"
                        >
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="18">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Color" Content="" />
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="-4">
                                                <Rectangle
                                                    Margin="0"
                                                    Height="14" Width="14"
                                                    Fill="{Binding MeshColor}"
                                                    Stroke="Black"
                                                    StrokeThickness=".5"
                                                    />
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="60" DisplayMemberBinding="{Binding FileName}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Rim" Content="Rim" />
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="60" DisplayMemberBinding="{Binding Planet}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Planet" Content="Planet" />
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="124" DisplayMemberBinding="{Binding CommonName}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Common" Content="Common Name" />
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <Button Grid.Row="2" Margin="0,5" Content="Remove All"
                            Command="{StaticResource Commands.RemoveAll}" />
                    <Button Grid.Row="3" Margin="0,0,0,5" Content="Clear Cache"
                            Command="{StaticResource Commands.ClearCache}"
                            Visibility="Collapsed"/>
                </Grid>

                <GridSplitter Grid.Row="3" Height="3" Background="Gray"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                <Grid x:Name="OffGrid" Grid.Row="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock
                        Text="Inactive Walkmeshes"
                        Margin="0,5"
                        HorizontalAlignment="Center"
                        TextDecorations="Underline"
                        />
                    <ListView
                        x:Name="lvOff"
                        Grid.Row="1"
                        ItemContainerStyle="{StaticResource OffItemStyle}"
                        ItemsSource="{Binding OffRims}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.CanContentScroll="False"
                        >
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="18">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Color" Content="" />
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="-4">
                                                <Rectangle
                                                    Margin="0"
                                                    Height="14" Width="14"
                                                    Fill="{Binding MeshColor}"
                                                    Stroke="Black"
                                                    StrokeThickness=".5"
                                                    />
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="60" DisplayMemberBinding="{Binding FileName}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Rim" Content="Rim" />
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="60" DisplayMemberBinding="{Binding Planet}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Planet" Content="Planet" />
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="124" DisplayMemberBinding="{Binding CommonName}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Common" Content="Common Name" />
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>

            </Grid>

            <!--
            Wrap the ZoomAndPanControl in a ScrollViewer.
            When the scaled content that is displayed in ZoomAndPanControl is larger than the viewport
            onto the content.
            ScrollViewer's scrollbars can be used to manipulate the offset of the viewport.    
            -->
            <ScrollViewer
                x:Name="scroller"
                Grid.Column="0"
                CanContentScroll="True"
                VerticalScrollBarVisibility="Visible"
                HorizontalScrollBarVisibility="Visible"
                >

                <!--
                This is the control that handles zooming and panning.
                -->
                <ZoomAndPan:ZoomAndPanControl
                    x:Name="zoomAndPanControl"
                    Background="LightGray"
                    MouseDown="zoomAndPanControl_MouseDown"
                    MouseUp="zoomAndPanControl_MouseUp"
                    MouseMove="zoomAndPanControl_MouseMove"
                    MouseWheel="zoomAndPanControl_MouseWheel"
                    MouseDoubleClick="zoomAndPanControl_MouseDoubleClick"
                    ContentScale="3"
                    MinContentScale=".1"
                    MaxContentScale="20"
                    >

                    <!-- 
                    This is the content that is displayed.
                    -->
                    <Grid
                        x:Name="theGrid"
                        Width="250"
                        Height="200"
                        >
                        <!--
                        This Canvas is the main part of the content that is displayed.
                        -->
                        <Canvas
                            x:Name="content"
                            Background="White"
                            >
                            <Canvas.Resources>
                                <TransformGroup x:Key="CartesianTransform">
                                    <TranslateTransform Y="{Binding BottomOffset}"
                                                        X="{Binding LeftOffset}"/>
                                    <ScaleTransform ScaleY="-1" />
                                    <TranslateTransform Y="{Binding ElementName=theGrid, Path=Height}" />
                                </TransformGroup>
                                <Style TargetType="Polygon">
                                    <Setter Property="RenderTransform" Value="{StaticResource CartesianTransform}" />
                                </Style>
                            </Canvas.Resources>

                            <!--
                            This Ellipse and StackPanel act as the point and text field for users to check map coordinates.
                            To maintain these data bindings, they will be saved in case the canvas is cleared.
                            If a module is added or removed, both will be hidden using the PointClicked boolean.
                            -->
                            <Ellipse
                                x:Name="leftClickEllipse"
                                Fill="Black" Width="1" Height="1"
                                Stroke="Black" StrokeThickness=".1"
                                Visibility="{Binding LeftClickPointVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                Canvas.Left="{Binding LeftClickPoint.X}"
                                Canvas.Bottom="{Binding LeftClickPoint.Y}"
                                />
                            <StackPanel
                                x:Name="leftClickCoords" Orientation="Horizontal"
                                Visibility="{Binding LeftClickPointVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                Canvas.Left="{Binding LeftClickPoint.X}"
                                Canvas.Bottom="{Binding LeftClickPoint.Y}"
                                Margin="0,0,0,0"
                                >
                                <StackPanel.RenderTransform>
                                    <TranslateTransform X="2" Y="1.5" />
                                </StackPanel.RenderTransform>
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="4" />
                                    </Style>
                                </StackPanel.Resources>

                                <TextBlock Text="(" />
                                <TextBlock Text="{Binding LeftClickModuleCoords.X, StringFormat=N2}" />
                                <TextBlock Text=", " />
                                <TextBlock Text="{Binding LeftClickModuleCoords.Y, StringFormat=N2}" />
                                <TextBlock Text=")" />
                            </StackPanel>

                            <Ellipse
                                x:Name="rightClickEllipse"
                                Fill="White" Width="1" Height="1"
                                Stroke="Black" StrokeThickness=".1"
                                Visibility="{Binding RightClickPointVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                Canvas.Left="{Binding RightClickPoint.X}"
                                Canvas.Bottom="{Binding RightClickPoint.Y}"
                                />
                            <StackPanel
                                x:Name="rightClickCoords" Orientation="Horizontal"
                                Visibility="{Binding RightClickPointVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                Canvas.Left="{Binding RightClickPoint.X}"
                                Canvas.Bottom="{Binding RightClickPoint.Y}"
                                Margin="0,0,0,0"
                                >
                                <StackPanel.RenderTransform>
                                    <TranslateTransform X="2" Y="1.5" />
                                </StackPanel.RenderTransform>
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="4" />
                                    </Style>
                                </StackPanel.Resources>

                                <TextBlock Text="(" />
                                <TextBlock Text="{Binding RightClickModuleCoords.X, StringFormat=N2}" />
                                <TextBlock Text=", " />
                                <TextBlock Text="{Binding RightClickModuleCoords.Y, StringFormat=N2}" />
                                <TextBlock Text=")" />
                            </StackPanel>
                        </Canvas>

                        <!--
                        This Canvas and Border are used as a very simple way to render a drag rectangle that
                        the user uses to specify an area to zoom in on.
                        -->
                        <Canvas
                            x:Name="dragZoomCanvas"
                            Visibility="Collapsed"
                            >
                            <Border 
                                x:Name="dragZoomBorder"
                                BorderBrush="Black"
                                BorderThickness="1"
                                Background="Silver"
                                CornerRadius="1"
                                Opacity="0"
                                />
                        </Canvas>
                    </Grid>
                </ZoomAndPan:ZoomAndPanControl>
            </ScrollViewer>

        </Grid>
    </DockPanel>
</Window>
